#!/usr/bin/env python
import getopt
import sys
from src.options import ApplicationOptions, ApplicationActions
from src.kraken_trader_application import KrakenTraderApplication


def main(argv):
    application_options = ApplicationOptions()
    try:
        opts, args = getopt.getopt(argv, 'a:t:hskor')
    except getopt.GetoptError:
        print('Invalid Usage: ./kraken_trader.py -a [action] <options>'
              '\n\tFor more information try ./kraken_trader.py -h')
        sys.exit()

    for opt, arg in opts:
        if opt == '-h':
            print('./kraken_trader.py -a [action] <options>\n'
                  'The action can be one of the followings:\n'
                  '\t<algorithm-name>, \'accountInfo\', \'accountDev\' or \'populateDB\''
                  '\n\t-k <path-to-key.file>:\t uses a specific kraken key-file'
                  '\n\t-s:\t only simulates the algorithm'
                  '\n\t-r:\t simulates the algorithm, with the current balance of the account'
                  '\n\t-o:\t optimizes the constants of the algorithm'
                  '\n\t-t [\'YYYY-MM-DD HH:MM:SS.ssss\']:\t use a specific start date, '
                  'when using simulations or optimization')
            sys.exit()
        elif opt == '-s':
            application_options.simulate = True
        elif opt == '-o':
            application_options.optimize = True
            application_options.simulate = True
        elif opt == '-t':
            application_options.start_date = arg

        if opt == '-a':
            arg_to_action_map = {
                'populateDB': ApplicationActions.POPULATE_DB,
                'accountInfo': ApplicationActions.ACCOUNT_INFO,
                'accountDev': ApplicationActions.ACCOUNT_DEV
            }

            application_options.action = arg_to_action_map.get(arg, ApplicationActions.TRADE)
            if application_options.action == ApplicationActions.TRADE:
                application_options.trader_class = arg

    application = KrakenTraderApplication(application_options)
    application.start()


if __name__ == '__main__':
    main(sys.argv[1:])
